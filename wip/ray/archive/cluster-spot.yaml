cluster_name: cluster 

max_workers: 5 

upscaling_speed: 1

docker:
    image: "rayproject/ray-ml:1.13.0rc0-cpu"
    container_name: "ray_container"
    pull_before_run: True
    run_options:   # Extra options to pass into "docker run"
        - --ulimit nofile=65536:65536
    head_image: "rayproject/ray-ml:1.13.0rc0-cpu"
    worker_image: "rayproject/ray-ml:1.13.0rc0-cpu"

idle_timeout_minutes: 60 

provider:
    type: aws
    region: us-east-1
    availability_zone: us-east-1a,us-east-1b,us-east-1c,us-east-1d

# By default, Ray creates a new private keypair, but you can also use your own.
auth:
    ssh_user: ubuntu
#    ssh_private_key: /path/to/your/key.pem

# By default, Ray will choose an apporipriate AMI ImageId, but you can choose a custom AMI..
available_node_types:
    ray.head.default:
        resources: {}
        node_config:
            InstanceType: m5.8xlarge
#            ImageId: ami-0cd43cad722dc3ae6
            BlockDeviceMappings:
                - DeviceName: /dev/sda1
                  Ebs:
                      VolumeSize: 500 
    ray.worker.default:
        min_workers: 1 
        max_workers: 5 
        resources: {}
        node_config:
            InstanceType: c5.2xlarge
#            ImageId: ami-0cd43cad722dc3ae6
            BlockDeviceMappings:
                - DeviceName: /dev/sda1
                  Ebs:
                      VolumeSize: 500 
            # Run workers on spot by default. Comment this out to use on-demand.
            InstanceMarketOptions:
                MarketType: spot 
                   SpotOptions:
                       MaxPrice: MAX_HOURLY_PRICE

head_node_type: ray.head.default

# Files or directories to copy to the head and worker nodes. 
file_mounts: {
#   REMOTE_PATH: LOCAL_PATH
    "/home/ray/data/": "./datasets/data/",
    "/home/ray/data/": "./train/data/",
    "/home/ray/transformer/": "./serve/transformer/",
    "/home/ray/transformer1/": "./serve/transformer1/",
    "/home/ray/transformer2/": "./serve/transformer2/"
}

cluster_synced_files: []

file_mounts_sync_continuously: True

# Explicitly exclude files during rsync
rsync_exclude:
    - "**/.git"
    - "**/.git/**"

# Use .gitignore to ignore files during rsync
rsync_filter:
    - ".gitignore"

# List of shell commands to run on the instance before Docker starts
initialization_commands: []

# List of shell commands to run on both head and worker within Docker
setup_commands: 
#    - pip install -U ray-1.13.0
    - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp37-cp37m-manylinux2014_x86_64.whl"
    - pip install -U raydp
    - pip install -U s3fs
    - pip install -U xgboost_ray
    - sudo apt-get update
    - sudo apt-get install -y default-jre

# List of shell commands to run on the head node after common setup.
head_setup_commands: []

# List of shell commands to run on the worker nodes after common setup.
worker_setup_commands: []

# Command to start ray on the head node.
head_start_ray_commands:
    - ray stop
    - ray start --head --port=6379 --object-manager-port=8076 --autoscaling-config=~/ray_bootstrap_config.yaml

# Command to start ray on worker nodes. 
worker_start_ray_commands:
    - ray stop
    - ray start --address=$RAY_HEAD_IP:6379 --object-manager-port=8076

head_node: {}
worker_nodes: {}
